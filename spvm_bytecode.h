#ifndef SPVM_BYTECODE_H
#define SPVM_BYTECODE_H

#include "spvm_base.h"



// SPVM bytecode is same as Java bytecode
enum {
  SPVM_BYTECODE_C_CODE_NOP,
  SPVM_BYTECODE_C_CODE_UNDEF,
  SPVM_BYTECODE_C_CODE_CONSTANT_BYTE_0,
  SPVM_BYTECODE_C_CODE_CONSTANT_BYTE_1,
  SPVM_BYTECODE_C_CODE_CONSTANT_SHORT_0,
  SPVM_BYTECODE_C_CODE_CONSTANT_SHORT_1,
  SPVM_BYTECODE_C_CODE_CONSTANT_INT_M1,
  SPVM_BYTECODE_C_CODE_CONSTANT_INT_0,
  SPVM_BYTECODE_C_CODE_CONSTANT_INT_1,
  SPVM_BYTECODE_C_CODE_CONSTANT_INT_2,
  SPVM_BYTECODE_C_CODE_CONSTANT_INT_3,
  SPVM_BYTECODE_C_CODE_CONSTANT_INT_4,
  SPVM_BYTECODE_C_CODE_CONSTANT_INT_5,
  SPVM_BYTECODE_C_CODE_CONSTANT_LONG_M1,
  SPVM_BYTECODE_C_CODE_CONSTANT_LONG_0,
  SPVM_BYTECODE_C_CODE_CONSTANT_LONG_1,
  SPVM_BYTECODE_C_CODE_CONSTANT_LONG_2,
  SPVM_BYTECODE_C_CODE_CONSTANT_LONG_3,
  SPVM_BYTECODE_C_CODE_CONSTANT_LONG_4,
  SPVM_BYTECODE_C_CODE_CONSTANT_LONG_5,
  SPVM_BYTECODE_C_CODE_CONSTANT_FLOAT_0,
  SPVM_BYTECODE_C_CODE_CONSTANT_FLOAT_1,
  SPVM_BYTECODE_C_CODE_CONSTANT_FLOAT_2,
  SPVM_BYTECODE_C_CODE_CONSTANT_DOUBLE_0,
  SPVM_BYTECODE_C_CODE_CONSTANT_DOUBLE_1,
  SPVM_BYTECODE_C_CODE_BBPUSH,
  SPVM_BYTECODE_C_CODE_BSPUSH,
  SPVM_BYTECODE_C_CODE_SSPUSH,
  SPVM_BYTECODE_C_CODE_BIPUSH,
  SPVM_BYTECODE_C_CODE_SIPUSH,
  SPVM_BYTECODE_C_CODE_BLPUSH,
  SPVM_BYTECODE_C_CODE_SLPUSH,
  SPVM_BYTECODE_C_CODE_LDC,
  SPVM_BYTECODE_C_CODE_LDC_W,
  SPVM_BYTECODE_C_CODE_IALOAD,
  SPVM_BYTECODE_C_CODE_LALOAD,
  SPVM_BYTECODE_C_CODE_FALOAD,
  SPVM_BYTECODE_C_CODE_DALOAD,
  SPVM_BYTECODE_C_CODE_BALOAD,
  SPVM_BYTECODE_C_CODE_SALOAD,
  SPVM_BYTECODE_C_CODE_BASTORE,
  SPVM_BYTECODE_C_CODE_SASTORE,
  SPVM_BYTECODE_C_CODE_IASTORE,
  SPVM_BYTECODE_C_CODE_LASTORE,
  SPVM_BYTECODE_C_CODE_FASTORE,
  SPVM_BYTECODE_C_CODE_DASTORE,
  SPVM_BYTECODE_C_CODE_POP,
  SPVM_BYTECODE_C_CODE_APOP,
  SPVM_BYTECODE_C_CODE_ADD_INT,
  SPVM_BYTECODE_C_CODE_ADD_LONG,
  SPVM_BYTECODE_C_CODE_ADD_FLOAT,
  SPVM_BYTECODE_C_CODE_ADD_DOUBLE,
  SPVM_BYTECODE_C_CODE_SUBTRACT_INT,
  SPVM_BYTECODE_C_CODE_SUBTRACT_LONG,
  SPVM_BYTECODE_C_CODE_SUBTRACT_FLOAT,
  SPVM_BYTECODE_C_CODE_SUBTRACT_DOUBLE,
  SPVM_BYTECODE_C_CODE_MULTIPLY_INT,
  SPVM_BYTECODE_C_CODE_MULTIPLY_LONG,
  SPVM_BYTECODE_C_CODE_MULTIPLY_FLOAT,
  SPVM_BYTECODE_C_CODE_MULTIPLY_DOUBLE,
  SPVM_BYTECODE_C_CODE_DIVIDE_INT,
  SPVM_BYTECODE_C_CODE_DIVIDE_LONG,
  SPVM_BYTECODE_C_CODE_DIVIDE_FLOAT,
  SPVM_BYTECODE_C_CODE_DIVIDE_DOUBLE,
  SPVM_BYTECODE_C_CODE_REMAINDER_INT,
  SPVM_BYTECODE_C_CODE_REMAINDER_LONG,
  SPVM_BYTECODE_C_CODE_REMAINDER_FLOAT,
  SPVM_BYTECODE_C_CODE_REMAINDER_DOUBLE,
  SPVM_BYTECODE_C_CODE_NEGATE_INT,
  SPVM_BYTECODE_C_CODE_NEGATE_LONG,
  SPVM_BYTECODE_C_CODE_NEGATE_FLOAT,
  SPVM_BYTECODE_C_CODE_NEGATE_DOUBLE,
  SPVM_BYTECODE_C_CODE_LEFT_SHIFT_INT,
  SPVM_BYTECODE_C_CODE_LEFT_SHIFT_LONG,
  SPVM_BYTECODE_C_CODE_RIGHT_SHIFT_INT,
  SPVM_BYTECODE_C_CODE_RIGHT_SHIFT_LONG,
  SPVM_BYTECODE_C_CODE_RIGHT_SHIFT_UNSIGNED_INT,
  SPVM_BYTECODE_C_CODE_RIGHT_SHIFT_UNSIGNED_LONG,
  SPVM_BYTECODE_C_CODE_AND_INT,
  SPVM_BYTECODE_C_CODE_AND_LONG,
  SPVM_BYTECODE_C_CODE_OR_INT,
  SPVM_BYTECODE_C_CODE_OR_LEFT,
  SPVM_BYTECODE_C_CODE_XOR_INT,
  SPVM_BYTECODE_C_CODE_XOR_LONG,
  SPVM_BYTECODE_C_CODE_IINC,
  SPVM_BYTECODE_C_CODE_CONVERT_INT_TO_LONG,
  SPVM_BYTECODE_C_CODE_CONVERT_INT_TO_FLOAT,
  SPVM_BYTECODE_C_CODE_CONVERT_INT_TO_DOUBLE,
  SPVM_BYTECODE_C_CODE_CONVERT_LONG_TO_INT,
  SPVM_BYTECODE_C_CODE_CONVERT_LONG_TO_FLOAT,
  SPVM_BYTECODE_C_CODE_CONVERT_LONG_TO_DOUBLE,
  SPVM_BYTECODE_C_CODE_CONVERT_FLOAT_TO_INT,
  SPVM_BYTECODE_C_CODE_CONVERT_FLOAT_TO_LONG,
  SPVM_BYTECODE_C_CODE_CONVERT_FLOAT_TO_DOUBLE,
  SPVM_BYTECODE_C_CODE_CONVERT_DOUBLE_TO_INT,
  SPVM_BYTECODE_C_CODE_CONVERT_DOUBLE_TO_LONG,
  SPVM_BYTECODE_C_CODE_D2F,
  SPVM_BYTECODE_C_CODE_I2B,
  SPVM_BYTECODE_C_CODE_I2S,
  SPVM_BYTECODE_C_CODE_ICMP,
  SPVM_BYTECODE_C_CODE_FCMPL,
  SPVM_BYTECODE_C_CODE_FCMPG,
  SPVM_BYTECODE_C_CODE_DCMPL,
  SPVM_BYTECODE_C_CODE_DCMPG,
  SPVM_BYTECODE_C_CODE_IFEQ,
  SPVM_BYTECODE_C_CODE_IFNE,
  SPVM_BYTECODE_C_CODE_IFLT,
  SPVM_BYTECODE_C_CODE_IFGE,
  SPVM_BYTECODE_C_CODE_IFGT,
  SPVM_BYTECODE_C_CODE_IFLE,
  SPVM_BYTECODE_C_CODE_IF_LCMPEQ,
  SPVM_BYTECODE_C_CODE_IF_LCMPNE,
  SPVM_BYTECODE_C_CODE_IF_LCMPLT,
  SPVM_BYTECODE_C_CODE_IF_LCMPGE,
  SPVM_BYTECODE_C_CODE_IF_LCMPGT,
  SPVM_BYTECODE_C_CODE_IF_LCMPLE,
  SPVM_BYTECODE_C_CODE_IF_ACMPEQ,
  SPVM_BYTECODE_C_CODE_IF_ACMPNE,
  SPVM_BYTECODE_C_CODE_GOTO,
  SPVM_BYTECODE_C_CODE_TABLESWITCH,
  SPVM_BYTECODE_C_CODE_LOOKUPSWITCH,
  SPVM_BYTECODE_C_CODE_ARRAYLENGTH,
  SPVM_BYTECODE_C_CODE_ATHROW,
  SPVM_BYTECODE_C_CODE_WIDE,
  SPVM_BYTECODE_C_CODE_IFNULL,
  SPVM_BYTECODE_C_CODE_IFNONNULL,
  SPVM_BYTECODE_C_CODE_INVOKESTATIC_WW,
  SPVM_BYTECODE_C_CODE_LDC_WW,
  SPVM_BYTECODE_C_CODE_BGETFIELD,
  SPVM_BYTECODE_C_CODE_SGETFIELD,
  SPVM_BYTECODE_C_CODE_IGETFIELD,
  SPVM_BYTECODE_C_CODE_LGETFIELD,
  SPVM_BYTECODE_C_CODE_FGETFIELD,
  SPVM_BYTECODE_C_CODE_DGETFIELD,
  SPVM_BYTECODE_C_CODE_BPUTFIELD,
  SPVM_BYTECODE_C_CODE_SPUTFIELD,
  SPVM_BYTECODE_C_CODE_IPUTFIELD,
  SPVM_BYTECODE_C_CODE_LPUTFIELD,
  SPVM_BYTECODE_C_CODE_FPUTFIELD,
  SPVM_BYTECODE_C_CODE_DPUTFIELD,
  SPVM_BYTECODE_C_CODE_LINC,
  SPVM_BYTECODE_C_CODE_B2I,
  SPVM_BYTECODE_C_CODE_S2I,
  SPVM_BYTECODE_C_CODE_B2L,
  SPVM_BYTECODE_C_CODE_B2F,
  SPVM_BYTECODE_C_CODE_B2D,
  SPVM_BYTECODE_C_CODE_S2B,
  SPVM_BYTECODE_C_CODE_S2L,
  SPVM_BYTECODE_C_CODE_S2F,
  SPVM_BYTECODE_C_CODE_S2D,
  SPVM_BYTECODE_C_CODE_L2B,
  SPVM_BYTECODE_C_CODE_L2S,
  SPVM_BYTECODE_C_CODE_F2B,
  SPVM_BYTECODE_C_CODE_F2S,
  SPVM_BYTECODE_C_CODE_D2B,
  SPVM_BYTECODE_C_CODE_D2S,
  SPVM_BYTECODE_C_CODE_B2S,
  SPVM_BYTECODE_C_CODE_MALLOC_OBJECT,
  SPVM_BYTECODE_C_CODE_MALLOC_ARRAY,
  SPVM_BYTECODE_C_CODE_MALLOC_STRING,
  SPVM_BYTECODE_C_CODE_RETURN_VOID,
  SPVM_BYTECODE_C_CODE_RETURN_VALUE,
  SPVM_BYTECODE_C_CODE_LOAD,
  SPVM_BYTECODE_C_CODE_LOAD_0,
  SPVM_BYTECODE_C_CODE_LOAD_1,
  SPVM_BYTECODE_C_CODE_LOAD_2,
  SPVM_BYTECODE_C_CODE_LOAD_3,
  SPVM_BYTECODE_C_CODE_STORE,
  SPVM_BYTECODE_C_CODE_STORE_0,
  SPVM_BYTECODE_C_CODE_STORE_1,
  SPVM_BYTECODE_C_CODE_STORE_2,
  SPVM_BYTECODE_C_CODE_STORE_3,
  SPVM_BYTECODE_C_CODE_ADD_BYTE,
  SPVM_BYTECODE_C_CODE_SUBTRACT_BYTE,
  SPVM_BYTECODE_C_CODE_MULTIPLY_BYTE,
  SPVM_BYTECODE_C_CODE_DIVIDE_BYTE,
  SPVM_BYTECODE_C_CODE_REMAINDER_BYTE,
  SPVM_BYTECODE_C_CODE_BNEG,
  SPVM_BYTECODE_C_CODE_BSHL,
  SPVM_BYTECODE_C_CODE_BSHR,
  SPVM_BYTECODE_C_CODE_BUSHR,
  SPVM_BYTECODE_C_CODE_BAND,
  SPVM_BYTECODE_C_CODE_BOR ,
  SPVM_BYTECODE_C_CODE_BXOR,
  SPVM_BYTECODE_C_CODE_BCMP,
  SPVM_BYTECODE_C_CODE_ADD_SHORT,
  SPVM_BYTECODE_C_CODE_SUBTRACT_SHORT,
  SPVM_BYTECODE_C_CODE_MULTIPLY_SHORT,
  SPVM_BYTECODE_C_CODE_DIVIDE_SHORT,
  SPVM_BYTECODE_C_CODE_REMAINDER_SHORT,
  SPVM_BYTECODE_C_CODE_SNEG,
  SPVM_BYTECODE_C_CODE_SSHL,
  SPVM_BYTECODE_C_CODE_SSHR,
  SPVM_BYTECODE_C_CODE_SUSHR,
  SPVM_BYTECODE_C_CODE_SAND,
  SPVM_BYTECODE_C_CODE_SOR ,
  SPVM_BYTECODE_C_CODE_SXOR,
  SPVM_BYTECODE_C_CODE_SCMP,
  SPVM_BYTECODE_C_CODE_BINC,
  SPVM_BYTECODE_C_CODE_SINC,
  SPVM_BYTECODE_C_CODE_ASTORE,
  SPVM_BYTECODE_C_CODE_AASTORE,
  SPVM_BYTECODE_C_CODE_APUTFIELD,
  SPVM_BYTECODE_C_CODE_INCREFCOUNT,
  SPVM_BYTECODE_C_CODE_DECREFCOUNT,
};

extern const char* const SPVM_BYTECODE_C_CODE_NAMES[];

#endif
